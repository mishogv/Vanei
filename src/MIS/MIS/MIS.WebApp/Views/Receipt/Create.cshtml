@using MIS.ViewModels.View.Receipt
@model CreateReceiptViewModel
@{
    ViewData["Title"] = "Create";
    var products = Model.Products;
}

<h1>Create Receipt</h1>

<div>
    <div class="d-flex justify-content-center">
        <button class="btn btn-primary col-md-6" type="button" data-toggle="collapse" data-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
            Guide
        </button>
    </div>
    <div class="collapse align-content-center w-50 align-items-center align-self-center" id="collapseExample">
        <ul class="card card-body justify-content-center">
            <li>
                Please add product by name or barcode.
            </li>
            <li>
                Please add quantity to product.
            </li>
            <li>
                If you are ready click add product.
            </li>
            <li>
                If you want to delete product click check box and after it click delete products.
            </li>
            <li>
                If you want to clear receipt click delete receipt.
            </li>
            <li>
                If you are ready with all products click finish receipt.
            </li>
        </ul>
    </div>
</div>

<table class="table table-active table-hover col-md-8 col-6 col-lg-12 col-sm-4">
    <thead>
        <tr>
            <th scope="col">Id</th>
            <th scope="col">Name</th>
            <th scope="col">Quantity</th>
            <th scope="col">Barcode</th>
            <th scope="col">Price</th>
            <th scope="col">Total</th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < products.Count; i++)
        {
            <tr>
                @{
                    var product = products[i];
                }
                <form asp-controller="Receipt" asp-action="AddProduct" class="form-group bg-light">
                    <div asp-validation-summary="All"></div>
                    <td class="row">
                        <input class="ml-2 mt-3 " type="checkbox"/>
                        <div>
                            <input asp-for="@product.Id" class="form-control" id="product-id-number-@i" value="@product.Id" type="number" min="1" max="@int.MaxValue" disabled="disabled"/>
                        </div>
                    </td>
                    <td>
                        <div>
                            <input asp-for="@product.Name" class="form-control" id="product-name-number-@i" value="@product.Name" placeholder="Product name" onkeypress="loadData(@i)"/>
                        </div>
                    </td>
                    <td>
                        <div>
                            <input asp-for="@product.Quantity" class="form-control" id="product-quantity-number-@i" value="@product.Quantity" type="number" step="0.5"/>
                        </div>
                    </td>
                    <td>
                        <div>
                            <input asp-for="@product.Barcode" class="form-control" id="product-barcode-number-@i" value="@product.Barcode" placeholder="Product barcode"/>
                        </div>
                    </td>
                    <td>
                        <div>
                            <input asp-for="@product.Price" class="form-control" id="product-price-number-@i" value="@product.Price" type="number" disabled="disabled"/>
                        </div>
                    </td>
                    <td>
                        <div>
                            <input asp-for="@product.Total" class="form-control" id="product-total-number-@i" value="@product.Total" disabled="disabled"/>
                        </div>
                    </td>
                </form>
            </tr>
    }
        <tr class="align-content-center">
            <th>
                <input type="submit" class="btn btn-dark container-fluid" value="Delete products" />
            </th>
            <th>
                <input type="submit" class="btn btn-dark container-fluid" value="Add product" />
            </th>
            <th>
                <input type="submit" class="btn btn-dark container-fluid" value="Finish receipt" />
            </th>
            <th>
                <input type="submit" class="btn btn-dark container-fluid" value="Delete receipt" />
            </th>
            <th>
            <td class="d-flex justify-content-center">
                <span class="d-flex justify-content-center mt-2 h5">
                    Total sum : @Model.Total.ToString("F2") $
                </span>
            </td>
            </th>
        </tr>
    </tbody>
</table>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        //Find product and load current product information
        //And create new row
        //TODO : Make ajax and load data from server. disable product when is already added
        var products = null;
        let productsNames = [];
    
    function loadData(id) {
        
        var selector = '#product-name-number-' + id;

            if (products == null) {
                $(function () {
                    $.ajax({
                        url: "/All/Products",
                        success: function load(data) {
                            products = data;
                            for (let product of data) {
                                productsNames.push(product.name);
                            }
                        },
                        error: function error() {
                            alert('error');
                        }
                    });
                });
            }

            console.log(products);

            if (productsNames.length > 0) {
                console.log(selector);
                $(selector).autocomplete({
                    minLength: 2,
                    source: productsNames,
                    focus: function (event, ui) {
                        $(selector).val(ui.item.label);
                        return false;
                    },
                    select: function (event, ui) {
                        $(selector).val(ui.item.label);
                        return false;
                    }
                });
            }
        }
    </script>
}